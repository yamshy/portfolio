name: PR Checks
permissions:
  contents: read

on:
  pull_request:
    branches: [main]

jobs:
  node-checks:
    name: Node.js Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '10'
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "store-path=$(pnpm store path --silent)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.store-path }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Type check
        run: pnpm -s tsc --noEmit

      - name: Astro check
        run: pnpm -s astro check

      - name: Test
        run: pnpm -s test

      - name: Build
        run: pnpm -s astro build

  container-smoke-test:
    name: Container Smoke Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: portfolio-test:latest
          load: true

      - name: Run container and test
        run: |
          docker run -d --name portfolio-test -p 8080:8080 portfolio-test:latest
          for i in {1..30}; do
            code=$(curl -fsS -o /dev/null -w "%{http_code}" http://localhost:8080/ || true)
            [ "$code" = "200" ] && echo "✅ 200 OK" && break
            [ $i -eq 30 ] && echo "❌ no 200 after 30 tries" && docker logs portfolio-test && exit 1
            sleep 2
          done

      - name: Clean up container
        if: always()
        run: |
          docker rm -f portfolio-test || true
          docker rmi portfolio-test:latest || true