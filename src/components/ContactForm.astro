---
// Contact form component with glassmorphism styling
---

<section id="contact" class="py-20 bg-gradient-to-b from-warm-white to-mocha-50 relative overflow-hidden">
	<!-- Background organic shapes -->
	<div class="absolute inset-0 pointer-events-none">
		<div class="absolute top-1/4 left-1/4 w-72 h-72 bg-glass-coral rounded-full animate-morph blur-lg opacity-40"></div>
		<div class="absolute bottom-1/3 right-1/4 w-48 h-48 bg-glass-blue rounded-full animate-organic-float blur-md opacity-50"></div>
		<div class="absolute top-1/2 left-1/2 w-32 h-32 bg-glass-yellow rounded-full animate-float blur-sm opacity-30"></div>
	</div>

	<div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
		<!-- Section header -->
		<div class="text-center mb-16 animate-fade-in">
			<h2 class="text-4xl lg:text-5xl font-light text-text-dark mb-6">
				Get In <span class="text-coral-primary font-medium">Touch</span>
			</h2>
			<p class="text-xl text-mocha-mousse max-w-3xl mx-auto leading-relaxed">
				Ready to collaborate on your next project? Let's discuss how we can build something amazing together.
			</p>
		</div>

		<!-- Contact form with glassmorphism -->
		<div class="bg-glass-mocha backdrop-blur-xl border border-mocha-mousse/20 rounded-3xl p-8 lg:p-12 shadow-2xl animate-grow">
			<form class="space-y-8" id="contact-form">
				<!-- Name and Email Row -->
				<div class="grid grid-cols-1 md:grid-cols-2 gap-6">
					<div class="space-y-2">
						<label for="name" class="block text-sm font-medium text-text-dark">
							Name *
						</label>
						<input
							type="text"
							id="name"
							name="name"
							required
							class="w-full px-4 py-3 bg-warm-white/50 backdrop-blur-sm border border-mocha-mousse/30 rounded-2xl text-text-dark placeholder-mocha-mousse/60 focus:outline-none focus:ring-2 focus:ring-coral-primary/50 focus:border-coral-primary/50 transition-all duration-300"
							placeholder="Your name"
						/>
					</div>
					<div class="space-y-2">
						<label for="email" class="block text-sm font-medium text-text-dark">
							Email *
						</label>
						<input
							type="email"
							id="email"
							name="email"
							required
							class="w-full px-4 py-3 bg-warm-white/50 backdrop-blur-sm border border-mocha-mousse/30 rounded-2xl text-text-dark placeholder-mocha-mousse/60 focus:outline-none focus:ring-2 focus:ring-coral-primary/50 focus:border-coral-primary/50 transition-all duration-300"
							placeholder="your.email@example.com"
						/>
					</div>
				</div>

				<!-- Subject -->
				<div class="space-y-2">
					<label for="subject" class="block text-sm font-medium text-text-dark">
						Subject *
					</label>
					<input
						type="text"
						id="subject"
						name="subject"
						required
						class="w-full px-4 py-3 bg-warm-white/50 backdrop-blur-sm border border-mocha-mousse/30 rounded-2xl text-text-dark placeholder-mocha-mousse/60 focus:outline-none focus:ring-2 focus:ring-coral-primary/50 focus:border-coral-primary/50 transition-all duration-300"
						placeholder="What's this about?"
					/>
				</div>

				<!-- Message -->
				<div class="space-y-2">
					<label for="message" class="block text-sm font-medium text-text-dark">
						Message *
					</label>
					<textarea
						id="message"
						name="message"
						rows="6"
						required
						class="w-full px-4 py-3 bg-warm-white/50 backdrop-blur-sm border border-mocha-mousse/30 rounded-2xl text-text-dark placeholder-mocha-mousse/60 focus:outline-none focus:ring-2 focus:ring-coral-primary/50 focus:border-coral-primary/50 transition-all duration-300 resize-none"
						placeholder="Tell me about your project, ideas, or just say hello..."
					></textarea>
				</div>

				<!-- Submit Button -->
				<div class="flex justify-center">
					<button
						type="submit"
						class="group relative px-12 py-4 bg-gradient-to-r from-coral-primary to-coral-primary/80 text-warm-white font-medium rounded-full transition-all duration-300 hover:from-coral-primary/90 hover:to-coral-primary hover:scale-105 hover:shadow-2xl focus:outline-none focus:ring-2 focus:ring-coral-primary/50 focus:ring-offset-2 focus:ring-offset-warm-white"
					>
						<span class="relative z-10">Send Message</span>
						<div class="absolute inset-0 bg-gradient-to-r from-coral-primary/20 to-coral-primary/10 rounded-full opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
						<span class="inline-block ml-2 transition-transform duration-300 group-hover:translate-x-1">â†’</span>
					</button>
				</div>

				<!-- Form Status Messages -->
				<div id="form-status" class="hidden text-center">
					<div id="success-message" class="hidden p-4 bg-glass-blue border border-cool-contrast/30 rounded-2xl text-cool-contrast">
						<svg class="w-6 h-6 mx-auto mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
						</svg>
						<p class="font-medium">Message sent successfully!</p>
						<p class="text-sm opacity-80">I'll get back to you soon.</p>
					</div>
					<div id="error-message" class="hidden p-4 bg-glass-coral border border-coral-primary/30 rounded-2xl text-coral-primary">
						<svg class="w-6 h-6 mx-auto mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
						</svg>
						<p class="font-medium">Something went wrong</p>
						<p class="text-sm opacity-80">Please try again or email me directly.</p>
					</div>
				</div>
			</form>
		</div>

		<!-- Alternative contact methods -->
		<div class="mt-12 text-center animate-fade-in" style="animation-delay: 0.3s;">
			<p class="text-mocha-mousse mb-6">Or reach out directly:</p>
			<div class="flex flex-col sm:flex-row justify-center items-center gap-4 sm:gap-8">
				<a
					href="mailto:sajudia@proton.me"
					class="group flex items-center gap-3 px-6 py-3 bg-glass-coral backdrop-blur-lg border border-coral-primary/30 rounded-full text-coral-primary font-medium transition-all duration-300 hover:bg-coral-primary hover:text-warm-white hover:scale-105"
				>
					<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
					</svg>
					sajudia@proton.me
				</a>
				<a
					href="https://github.com/yamshy"
					target="_blank"
					rel="noopener noreferrer"
					class="group flex items-center gap-3 px-6 py-3 bg-glass-mocha backdrop-blur-lg border border-mocha-mousse/30 rounded-full text-mocha-mousse font-medium transition-all duration-300 hover:bg-mocha-mousse hover:text-warm-white hover:scale-105"
				>
					<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
						<path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
					</svg>
					GitHub
				</a>
			</div>
		</div>
	</div>
</section>

<script>
	// Contact form handling
	document.addEventListener('DOMContentLoaded', () => {
		const form = document.getElementById('contact-form') as HTMLFormElement;
		const formStatus = document.getElementById('form-status');
		const successMessage = document.getElementById('success-message');
		const errorMessage = document.getElementById('error-message');

		if (!form || !formStatus || !successMessage || !errorMessage) return;

		form.addEventListener('submit', async (e) => {
			e.preventDefault();
			
			// Hide any previous status messages
			formStatus.classList.add('hidden');
			successMessage.classList.add('hidden');
			errorMessage.classList.add('hidden');

			// Get form data
			const formData = new FormData(form);
			const data = {
				name: formData.get('name'),
				email: formData.get('email'),
				subject: formData.get('subject'),
				message: formData.get('message')
			};

			try {
				// For now, we'll simulate a successful submission
				// In a real implementation, you would send this to your backend
				await new Promise(resolve => setTimeout(resolve, 1000));
				
				// Show success message
				formStatus.classList.remove('hidden');
				successMessage.classList.remove('hidden');
				
				// Reset form
				form.reset();
				
				// Hide success message after 5 seconds
				setTimeout(() => {
					formStatus.classList.add('hidden');
					successMessage.classList.add('hidden');
				}, 5000);

			} catch (error) {
				console.error('Form submission error:', error);
				
				// Show error message
				formStatus.classList.remove('hidden');
				errorMessage.classList.remove('hidden');
				
				// Hide error message after 5 seconds
				setTimeout(() => {
					formStatus.classList.add('hidden');
					errorMessage.classList.add('hidden');
				}, 5000);
			}
		});

		// Add smooth scrolling for contact section
		const contactLinks = document.querySelectorAll('a[href="#contact"]');
		contactLinks.forEach(link => {
			link.addEventListener('click', (e) => {
				e.preventDefault();
				const contactSection = document.getElementById('contact');
				if (contactSection) {
					contactSection.scrollIntoView({
						behavior: 'smooth',
						block: 'start'
					});
				}
			});
		});
	});
</script>

<style>
	/* Custom animations for the contact form */
	@keyframes fade-in {
		from { opacity: 0; transform: translateY(20px); }
		to { opacity: 1; transform: translateY(0); }
	}

	@keyframes grow {
		from { opacity: 0; transform: scale(0.95); }
		to { opacity: 1; transform: scale(1); }
	}

	@keyframes float {
		0%, 100% { transform: translateY(0px); }
		50% { transform: translateY(-10px); }
	}

	.animate-fade-in {
		animation: fade-in 0.6s ease-out;
	}

	.animate-grow {
		animation: grow 0.6s ease-out;
	}

	.animate-float {
		animation: float 3s ease-in-out infinite;
	}

	/* Form input focus effects */
	.form-input:focus {
		transform: translateY(-2px);
		box-shadow: 0 8px 25px rgb(from var(--color-coral-primary) r g b / 0.15);
	}

	/* Button hover effects */
	.submit-button:hover {
		box-shadow: 0 10px 30px rgb(from var(--color-coral-primary) r g b / 0.3);
	}

	/* Responsive adjustments */
	@media (max-width: 768px) {
		.contact-form {
			padding: 1.5rem;
		}
		
		.contact-form h2 {
			font-size: 2.5rem;
		}
	}
</style>
