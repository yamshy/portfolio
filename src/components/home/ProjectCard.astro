---
import type { Project } from '../../content/home';
import ProjectCardHeader from './ProjectCardHeader.astro';
import ProjectDetailGroup from './ProjectDetailGroup.astro';
import { getProjectDetails } from './projectDetails';

interface Props {
  project: Project;
}

const { project } = Astro.props as Props;
const details = getProjectDetails(project);
---

{
  (() => {
    switch (project.layout) {
      case 'wide':
        return (
          <article class="project-card project-card--wide u-glass" data-reveal>
            <ProjectCardHeader project={project} />
            <div class="project-card__content">
              <div>
                <h4>Problem</h4>
                <p>{project.problem}</p>
              </div>
              <div>
                <h4>Solution</h4>
                <p>{project.solution}</p>
              </div>
              <ProjectDetailGroup
                details={details}
                keys={['stack']}
                wrapper="div"
              />
            </div>
            <div class="project-card__footer">
              <ProjectDetailGroup
                details={details}
                keys={['results', 'challenges']}
                wrapper="div"
              />
            </div>
            {project.link && (
              <a class="project-card__link" href={project.link}>
                Source code →
              </a>
            )}
          </article>
        );
      case 'standard':
        return (
          <article class="project-card project-card--standard" data-reveal>
            <ProjectCardHeader project={project} />
            <dl>
              <div>
                <dt>Problem</dt>
                <dd>{project.problem}</dd>
              </div>
              <div>
                <dt>Solution</dt>
                <dd>{project.solution}</dd>
              </div>
            </dl>
            <div class="project-card__meta">
              <ProjectDetailGroup
                details={details}
                keys={['stack', 'results', 'challenges']}
              />
            </div>
            {project.link && (
              <a class="project-card__link" href={project.link}>
                Source code →
              </a>
            )}
          </article>
        );
      case 'tall':
        return (
          <article class="project-card project-card--tall" data-reveal>
            <ProjectCardHeader project={project} />
            <div class="project-card__meta">
              <h4>Problem</h4>
              <p>{project.problem}</p>
              <h4>Solution</h4>
              <p>{project.solution}</p>
            </div>
            <div class="project-card__meta">
              <ProjectDetailGroup
                details={details}
                keys={['stack', 'results', 'challenges']}
              />
            </div>
            {project.link && (
              <a class="project-card__link" href={project.link}>
                Source code →
              </a>
            )}
          </article>
        );
      default:
        return null;
    }
  })()
}
