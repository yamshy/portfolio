---
const { 
  title, 
  description, 
  href = "#", 
  variant = "standard",
  tags = [],
  image
} = Astro.props;
---

<article class={`card ${variant} u-glass u-glass--coral u-border-coral-20 u-r-xl u-elevate`} role="article">
  {image && (
    <div class="image-container">
      <img src={image} alt={`${title} project screenshot`} loading="lazy" />
    </div>
  )}
  <header class="header">
    <h3><a href={href}>{title}</a></h3>
  </header>
  <p class="description">{description}</p>
  {tags.length > 0 && (
    <ul class="tags" role="list">
      {tags.map((tag: string) => (
        <li class="tag">{tag}</li>
      ))}
    </ul>
  )}
</article>

<style>
  .card { 
    padding: var(--sp-6); 
    box-shadow: 0 16px 32px color-mix(in oklab, var(--text-dark) 18%, transparent);
    display: flex;
    flex-direction: column;
    gap: var(--sp-3);
    min-height: 200px;
    transition: all 300ms var(--ease-3);
    position: relative;
  }
  
  .card:hover {
    transform: translateY(-4px);
    box-shadow: 0 20px 40px color-mix(in oklab, var(--text-dark) 25%, transparent);
  }
  
  .image-container {
    width: 100%;
    height: 120px;
    border-radius: var(--r-lg);
    overflow: hidden;
    margin-bottom: var(--sp-2);
  }
  
  .image-container img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 300ms var(--ease-3);
  }
  
  .card:hover .image-container img {
    transform: scale(1.05);
  }
  
  .header h3 { 
    margin: 0; 
    font-size: clamp(1.1rem, 2vw, 1.35rem);
    font-weight: 600;
  }
  
  .header a { 
    color: var(--text-dark); 
    text-decoration: none;
    transition: color 200ms var(--ease-3);
  }
  
  .header a:hover { 
    color: var(--coral);
    text-decoration: underline; 
    text-underline-offset: 0.2em; 
  }
  
  .header a:focus-visible {
    outline: 2px solid var(--accent-yellow);
    outline-offset: 2px;
    border-radius: 4px;
  }
  
  .description { 
    margin: 0; 
    max-width: 60ch;
    line-height: 1.7;
    letter-spacing: 0.01em;
    color: color-mix(in oklab, var(--text-dark), transparent 15%);
    flex-grow: 1;
  }
  
  .tags {
    display: flex;
    flex-wrap: wrap;
    gap: var(--sp-2);
    margin: 0;
    padding: 0;
    list-style: none;
  }
  
  .tag {
    background: color-mix(in oklab, var(--coral) 15%, transparent);
    color: var(--coral);
    padding: var(--sp-1) var(--sp-2);
    border-radius: 12px;
    font-size: 0.8rem;
    font-weight: 500;
    border: 1px solid color-mix(in oklab, var(--coral) 20%, transparent);
    transition: all 200ms var(--ease-3);
    letter-spacing: 0.01em;
  }
  
  .tag:hover {
    background: color-mix(in oklab, var(--coral) 25%, transparent);
    transform: translateY(-1px);
  }
  
  /* Variant-specific styling */
  .card.featured {
    background: color-mix(in oklab, var(--glass-coral), var(--accent-yellow) 5%);
    border-color: color-mix(in oklab, var(--coral) 30%, transparent);
  }
  
  .card.standard {
    background: var(--glass-coral);
  }
  
  .card.secondary {
    background: color-mix(in oklab, var(--glass-coral), transparent 20%);
    border-color: color-mix(in oklab, var(--coral) 15%, transparent);
  }
  
  .card.wide {
    min-height: 180px;
  }
  
  .card.tall {
    min-height: 300px;
  }
  
  @media (prefers-reduced-motion: reduce) {
    .card:hover .image-container img {
      transform: none;
    }
  }
  
  @media (max-width: 767px) {
    .card {
      padding: var(--sp-4);
      min-height: 160px;
    }
    
    .image-container {
      height: 100px;
    }
    
    .card.tall {
      min-height: 200px;
    }
  }
</style>
